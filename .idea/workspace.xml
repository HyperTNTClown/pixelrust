<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
    <cargoProject FILE="$PROJECT_DIR$/app/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cf8aacae-9b81-4c86-a622-7634722ef1d5" name="Changes" comment="Start setting width based on server sent size">
      <change afterPath="$PROJECT_DIR$/app/css/main.less" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/js/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/app/js/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/app/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/app/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/static/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/app/static/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/webpack.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/app/webpack.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/color.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/color.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/pixel_map.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/pixel_map.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/render_thread.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/render_thread.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodyActiveAccount">
    <option name="activeAccountId" value="VXNlcjo1MTU2MQ==" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="hh7cl1y9" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2XI0AsQu0xKGRPFBVLtJNFQ16g9" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,
    &quot;Cargo.Run on OC.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run pixelrust Release.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Run pixelrust.executor&quot;: &quot;Run&quot;,
    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.Oracle Cloud Docker.executor&quot;: &quot;Run&quot;,
    &quot;Makefile Target.ci.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.CodyHistoryLlmMigration&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.CodyProjectSettingsMigration&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.rust.reset.selective.auto.import&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/marvin/Projects/pixelrust/app&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;npm.start.executor&quot;: &quot;Run&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;language.rust.rustfmt&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/marvin/Applications/RustRover.app/Contents/plugins/javascript-impl/jsLanguageServicesImpl/external&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app/css" />
      <recent name="$PROJECT_DIR$/app/js" />
      <recent name="$PROJECT_DIR$/app" />
      <recent name="$PROJECT_DIR$/build" />
    </key>
  </component>
  <component name="RsExternalLinterProjectSettings">
    <option name="tool" value="Clippy" />
  </component>
  <component name="RunManager" selected="npm.start">
    <configuration name="Flamegraph pixelrust" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="flamegraph" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run on OC" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <target name="root@oc:22" />
      <option name="command" value="run --release" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run pixelrust Release" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package pixelrust --bin pixelrust --release" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run pixelrust" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package pixelrust --bin pixelrust" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test pixelrust" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="ci" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/makefile" target="ci" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Oracle Cloud Docker" type="docker-deploy" factoryName="dockerfile" server-name="Oracle Cloud Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="start" type="js.build_tools.npm" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/app/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Cargo.Flamegraph pixelrust" />
      <item itemvalue="Cargo.Run on OC" />
      <item itemvalue="Cargo.Run pixelrust Release" />
      <item itemvalue="Cargo.Run pixelrust" />
      <item itemvalue="Cargo.Test pixelrust" />
      <item itemvalue="Makefile Target.ci" />
      <item itemvalue="Docker.Dockerfile" />
      <item itemvalue="Docker.Oracle Cloud Docker" />
      <item itemvalue="npm.start" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Dockerfile" />
        <item itemvalue="Makefile Target.ci" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="RustfmtProjectSettings">
    <option name="runRustfmtOnSave" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="cf8aacae-9b81-4c86-a622-7634722ef1d5" name="Changes" comment="" />
      <created>1698301151914</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1698301151914</updated>
      <workItem from="1698301159143" duration="8155000" />
      <workItem from="1698384090913" duration="8646000" />
      <workItem from="1698421752501" duration="17145000" />
      <workItem from="1698559527610" duration="26937000" />
      <workItem from="1698733026268" duration="11022000" />
      <workItem from="1698883304904" duration="790000" />
      <workItem from="1698888509272" duration="1627000" />
      <workItem from="1698938825078" duration="9161000" />
      <workItem from="1699074895882" duration="90000" />
      <workItem from="1699294699956" duration="436000" />
      <workItem from="1700259190494" duration="176000" />
      <workItem from="1701407855517" duration="92000" />
      <workItem from="1701407971235" duration="59000" />
      <workItem from="1706419803700" duration="4156000" />
      <workItem from="1706510264276" duration="1953000" />
      <workItem from="1706585077086" duration="2402000" />
      <workItem from="1706748688003" duration="599000" />
      <workItem from="1706771984748" duration="509000" />
      <workItem from="1706777093558" duration="4273000" />
      <workItem from="1706814010364" duration="34356000" />
      <workItem from="1706946042367" duration="10247000" />
      <workItem from="1707155046388" duration="132000" />
      <workItem from="1707155186617" duration="132000" />
      <workItem from="1707155418013" duration="8484000" />
      <workItem from="1707260479326" duration="1894000" />
      <workItem from="1707271550478" duration="8257000" />
      <workItem from="1707281151792" duration="5000" />
      <workItem from="1707290770245" duration="829000" />
      <workItem from="1707334587709" duration="794000" />
      <workItem from="1707410088444" duration="3663000" />
      <workItem from="1707517531659" duration="155000" />
      <workItem from="1707517699043" duration="626000" />
      <workItem from="1708586206392" duration="3013000" />
      <workItem from="1708619517736" duration="11000" />
      <workItem from="1708656139056" duration="43000" />
      <workItem from="1708710414039" duration="621000" />
      <workItem from="1708835752945" duration="590000" />
      <workItem from="1708922897637" duration="599000" />
      <workItem from="1708972109741" duration="854000" />
      <workItem from="1708974752088" duration="598000" />
      <workItem from="1709068585106" duration="574000" />
      <workItem from="1709974113996" duration="24000" />
      <workItem from="1710517037880" duration="599000" />
      <workItem from="1710526072881" duration="246000" />
      <workItem from="1710656262774" duration="198000" />
    </task>
    <task id="LOCAL-00001" summary="Add .gitignore, Cargo.lock and Cargo.toml for new Rust project&#10;&#10;Added .gitignore file to exclude unnecessary files from git. Initialised new Rust project with Cargo.toml. This contains project description and dependencies such as Tokio, mjpeg_rs, etc. Also, added Cargo.lock which ensures that multiple builds of the same package will resolve and build identical copies of dependencies.">
      <option name="closed" value="true" />
      <created>1698653124752</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1698653124752</updated>
    </task>
    <task id="LOCAL-00002" summary="Initialize new Rust project with additional checks&#10;&#10;Established a new Rust project and added a .gitignore, Cargo.lock and Cargo.toml files. The .gitignore excludes unnecessary files from git, the Cargo.toml contains the project description and dependencies like Tokio and mjpeg_rs. Additional checks were added in the main.rs to ensure x and y are within the bounds of WIDTH and HEIGHT. Corrections were implemented to the get_pixel and set_pixel functions in pixel_map.rs. This ensures that multiple builds of the same package will resolve and build identical copies of dependencies.">
      <option name="closed" value="true" />
      <created>1698654706381</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1698654706381</updated>
    </task>
    <task id="LOCAL-00003" summary="Don't actually know what I'm doing but it might work?">
      <option name="closed" value="true" />
      <created>1698727726021</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1698727726021</updated>
    </task>
    <task id="LOCAL-00004" summary="We ASYNC">
      <option name="closed" value="true" />
      <created>1698729060871</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1698729060871</updated>
    </task>
    <task id="LOCAL-00005" summary="WE TRANSPARENT">
      <option name="closed" value="true" />
      <created>1698734930104</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1698734930104</updated>
    </task>
    <task id="LOCAL-00006" summary="WE NOW REALLY TRANSPARENT">
      <option name="closed" value="true" />
      <created>1698774477482</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1698774477482</updated>
    </task>
    <task id="LOCAL-00007" summary="I see it workin' I hatin'">
      <option name="closed" value="true" />
      <created>1698776412082</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1698776412082</updated>
    </task>
    <task id="LOCAL-00008" summary="Maybeeee we should not exit fully?">
      <option name="closed" value="true" />
      <created>1698940542674</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1698940542674</updated>
    </task>
    <task id="LOCAL-00009" summary="Saving to qoi?">
      <option name="closed" value="true" />
      <created>1698942174244</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1698942174244</updated>
    </task>
    <task id="LOCAL-00010" summary="Probably not important">
      <option name="closed" value="true" />
      <created>1706420477050</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1706420477050</updated>
    </task>
    <task id="LOCAL-00011" summary="Thought I should maybe make a commit">
      <option name="closed" value="true" />
      <created>1706952556689</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1706952556689</updated>
    </task>
    <task id="LOCAL-00012" summary="Locks and Caddyfile">
      <option name="closed" value="true" />
      <created>1706952610821</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1706952610821</updated>
    </task>
    <task id="LOCAL-00013" summary="Uhhm some stuff?">
      <option name="closed" value="true" />
      <created>1707199802581</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1707199802581</updated>
    </task>
    <task id="LOCAL-00014" summary="Removed unmaintained wee-alloc">
      <option name="closed" value="true" />
      <created>1707242161194</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1707242161194</updated>
    </task>
    <task id="LOCAL-00015" summary="Readme, Makefile, Dockerfile + Some other minor changes">
      <option name="closed" value="true" />
      <created>1707277987872</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1707277987872</updated>
    </task>
    <task id="LOCAL-00016" summary="Removed unused deps/features">
      <option name="closed" value="true" />
      <created>1707281055614</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1707281055614</updated>
    </task>
    <task id="LOCAL-00017" summary="Start setting width based on server sent size">
      <option name="closed" value="true" />
      <created>1707290848355</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1707290848355</updated>
    </task>
    <option name="localTasksCounter" value="18" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add .gitignore, Cargo.lock and Cargo.toml for new Rust project&#10;&#10;Added .gitignore file to exclude unnecessary files from git. Initialised new Rust project with Cargo.toml. This contains project description and dependencies such as Tokio, mjpeg_rs, etc. Also, added Cargo.lock which ensures that multiple builds of the same package will resolve and build identical copies of dependencies." />
    <MESSAGE value="Initialize new Rust project with additional checks&#10;&#10;Established a new Rust project and added a .gitignore, Cargo.lock and Cargo.toml files. The .gitignore excludes unnecessary files from git, the Cargo.toml contains the project description and dependencies like Tokio and mjpeg_rs. Additional checks were added in the main.rs to ensure x and y are within the bounds of WIDTH and HEIGHT. Corrections were implemented to the get_pixel and set_pixel functions in pixel_map.rs. This ensures that multiple builds of the same package will resolve and build identical copies of dependencies." />
    <MESSAGE value="Don't actually know what I'm doing but it might work?" />
    <MESSAGE value="We ASYNC" />
    <MESSAGE value="WE TRANSPARENT" />
    <MESSAGE value="WE NOW REALLY TRANSPARENT" />
    <MESSAGE value="I see it workin' I hatin'" />
    <MESSAGE value="Maybeeee we should not exit fully?" />
    <MESSAGE value="Saving to qoi?" />
    <MESSAGE value="Probably not important" />
    <MESSAGE value="Thought I should maybe make a commit" />
    <MESSAGE value="Locks and Caddyfile" />
    <MESSAGE value="Uhhm some stuff?" />
    <MESSAGE value="Removed unmaintained wee-alloc" />
    <MESSAGE value="Readme, Makefile, Dockerfile + Some other minor changes" />
    <MESSAGE value="Removed unused deps/features" />
    <MESSAGE value="Start setting width based on server sent size" />
    <option name="LAST_COMMIT_MESSAGE" value="Start setting width based on server sent size" />
  </component>
</project>